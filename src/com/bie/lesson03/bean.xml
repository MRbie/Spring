<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">
 
	<!-- 
		对象依赖关系
			如何为对象的属性赋值：
				1：通过构造函数。
				2：通过set方法给属性注入值。
	 -->
	<!-- 通过构造函数给属性注入值 -->
	<!-- <bean id="user" class="com.bie.lesson03.User">
		<constructor-arg value="10010"></constructor-arg>
		<constructor-arg value="Jack"></constructor-arg>
	</bean> -->
	
	<!-- 
		通过set方法给属性注入值 
			setId/setName将set去掉，然后首字母变小写即可。
	-->
	<!-- <bean id="user" class="com.bie.lesson03.User">
		<property name="id" value="10010"></property>
		<property name="name" value="Jack"></property>
	</bean> -->
	
	
	<!-- 
		控制反转Ioc，对象的创建交给容器完成。
		依赖注入DI，处置对象之间的依赖关系。
		案例
			dao/service/action
			依赖关系通过set方法进行注入。
	 -->
	<!-- dao写到一起，service写到一起 -->
	<!-- <bean id="userDao" class="com.bie.lesson03.UserDao"></bean> 
	
	service写到一起
	<bean id="userService" class="com.bie.lesson03.UserService">
		  处理对象的依赖关系，依赖注入
		  name是属性，ref是引用那个userDao
		  <property name="userDao" ref="userDao"></property>
	</bean>
	
	action写到一起
	<bean id="userAction" class="com.bie.lesson03.UserAction">
		<property name="userService" ref="userService"></property>
	</bean> -->
	
	
	<!-- 
		通过内部bean实现dao的注入，service的注入，action的注入；
		如下所示：
　　　　　  	缺点:相当于局部变量，service和dao只能使用一次,不方便维护.　
	 -->
	 <!-- <bean id="userAction" class="com.bie.lesson03.UserAction"> 
	 	<property name="userService">
	 		<bean id="userService" class="com.bie.lesson03.UserService">
	 			<property name="userDao">
	 				<bean id="userDao" class="com.bie.lesson03.UserDao"></bean>
	 			</property>
	 		</bean>
	 	</property>
	 </bean> -->
	 
	 <!-- 
	 	p命名空间，如下所示：
　　　	注意:
			给对象属性注入值也可以通过p名称空间给对象的属性注入值，
			但是Spring的版本必须是3.0版本以上才可以使用
　　　　　 必须在applicationContext.xml中引入这句话:
			xmlns:p="http://www.springframework.org/schema/p"
	  -->
	  <!-- 使用p名称空间给对象的属性注入值 -->
	  <!-- <bean id="userDao" class="com.bie.lesson03.UserDao"></bean> 	
	  <bean id="userService" p:userDao-ref="userDao" class="com.bie.lesson03.UserService"></bean>	 
	  <bean id="userAction" p:userService-ref="userService" class="com.bie.lesson03.UserAction"></bean>	  -->
		 
	  	   
	  <!-- 
	  	    自动装配，了解即可
	  	 	1:按照类型自动装配
	  	 	2:按照名称自动装配
	   --> 
	  <!-- 自动装配
        	1:根据"名称"自动装配，userService注入的属性，
        		会去IoC容器中自动查询和属性名称同名的对象
            	即在service层的方法中实现UserDao的定义的名称去
            	和IoC容器(applicationContext.xml)中名称相同的。
		--> 	
	  <!-- 根据名称自动装配 -->	
	  <!-- <bean id="userDao" class="com.bie.lesson03.UserDao"></bean> 	
	  <bean id="userService" autowire="byName" class="com.bie.lesson03.UserService"></bean>	 
	  <bean id="userAction"  autowire="byName" class="com.bie.lesson03.UserAction"></bean> -->	
		 
	  <!-- 根据类型自动装配 --> 
	  <bean id="userDao" class="com.bie.lesson03.UserDao"></bean> 	
	  <bean id="userService" autowire="byType" class="com.bie.lesson03.UserService"></bean>	 
	  <bean id="userAction"  autowire="byType" class="com.bie.lesson03.UserAction"></bean>		 
</beans>

